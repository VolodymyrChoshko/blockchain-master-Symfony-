{
  "id": 104789,
  "customerKey": "ac33baca-3c13-4ebe-a9c8-2a0e590b58be",
  "objectID": "d2678e82-3485-457a-975f-cf7acfe0b698",
  "contentType": "text\/html",
  "assetType": {
    "id": 205,
    "name": "webpage",
    "displayName": "Web Page"
  },
  "version": 1,
  "name": "Unsub - Test",
  "owner": {
    "id": 100383448,
    "email": "sf.savvy@teclever.com",
    "name": "Team Teclever",
    "userId": "100383448"
  },
  "createdDate": "2020-09-07T03:14:20.07-06:00",
  "createdBy": {
    "id": 100383448,
    "email": "sf.savvy@teclever.com",
    "name": "Team Teclever",
    "userId": "100383448"
  },
  "modifiedDate": "2021-04-12T07:17:25.76-06:00",
  "modifiedBy": {
    "id": 100383448,
    "email": "sf.savvy@teclever.com",
    "name": "Team Teclever",
    "userId": "100383448"
  },
  "enterpriseId": 100016677,
  "memberId": 515005303,
  "status": {
    "id": 1,
    "name": "Draft"
  },
  "thumbnail": {
    "thumbnailUrl": "\/v1\/assets\/104789\/thumbnail"
  },
  "category": {
    "id": 301188,
    "name": "Content Builder",
    "parentId": 0
  },
  "meta": {
    "globalStyles": {
      "isLocked": false,
      "body": {
        "max-width": "1280px",
        "color": "#000000",
        "font-family": "Arial",
        "font-size": "12px",
        "margin": "0px auto"
      },
      "template": {
        "background-color": "#FFFFFF",
        "border": "none",
        "box-sizing": "border-box",
        "padding": "0px",
        "width": "100%"
      },
      "buttons": [],
      "h1": [],
      "h2": [],
      "h3": [],
      "links": [],
      "styling": {
        "buttonstyling": {
          "border": {
            "allowUnlinking": true
          }
        }
      }
    }
  },
  "views": {
    "html": {
      "thumbnail": [],
      "content": "<!DOCTYPE html>\n<html>\n  <head>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\" \/>\n    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\" \/>\n    <style class=\"main_style\">\n.layout-canvas-g { background-color: #FFFFFF; border: none; box-sizing: border-box; padding: 0px; width: 100%; }\n.layout-canvas-g > .header, .layout-canvas-g > .section, .layout-canvas-g > .footer { position: relative; overflow: hidden; width: 100%; overflow-wrap: break-word; }\n.layout-canvas-g > .section { margin: 10px 0px; }\n.layout-canvas-g > .section > .columns { box-sizing: border-box; overflow-wrap: break-word; }\nbody { color: #000000; font-family: Arial; font-size: 12px; margin: 0px auto; max-width: 1280px; }\n@media only screen and (max-width: 480px) {\n  .mobile-hidden { display: none !important; }\n  .responsive-td { width: 100% !important; display: block !important; padding: 0px !important; }\n}\n.layout-canvas-g > .section > .columns { width: 100%; }\n<\/style>\n    \n    <link href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.5.2\/css\/bootstrap.min.css\">\n    <link href=\"https:\/\/stackpath.bootstrapcdn.com\/bootstrap\/4.5.2\/js\/bootstrap.bundle.min.js\">\n    <style>\n      .switch {\n        position: relative;\n        display: inline-block;\n        width: 50px;\n        background: rgba(0, 0, 0, 0.25);\n        height: 22px;\n        border-radius: 20px;\n        transition: all 0.3s;\n        cursor:pointer;\n      }\n      .switch::after {\n        content: '';\n        position: absolute;\n        width: 18px;\n        height: 18px;\n        border-radius:50%;\n        background-color: white;\n        top: 1px;\n        left: 1px;\n        transition: all 0.3s;\n      }\n      .checkbox:checked + .switch::after {\n        left : 30px;\n      }\n      .checkbox:checked + .switch {\n        background: url(https:\/\/s3-us-west-2.amazonaws.com\/s.cdpn.io\/162656\/checkmark-switcher.svg);\n        background-color:#0070d2;\n      }\n      .checkbox {\n        display : none;\n      }\n      label\n      {\n        margin:1vh\n          \n      }\n      legend\n      {\n        padding-top: 3vw;\n        font-size:30px;\n        text-decoration:underline;\n      }\n     \n      \n      a\n      {\n        color: greenyellow;\n        border-radius: 22px;\n        font-size: 20px;\n        padding: 10px;\n        display: block;\n        line-height: 25px;\n      }\n     \n     \n      \n     \n      .raise:hover,\n      .raise:focus {\n        box-shadow: 0 0.5em 0.5em -0.4em red;\n        transform: translateY(-0.32em);\n      }\n    <\/style>\n    <style>\n.card {\n  background:white;\n      padding: 10px;\n  border-radius: 5px;\n  margin-bottom:12px;\n}\n\n       body\n      {\n        background:#EFF0F1;\n        \n        font-size:14px;\n        \n      }\n      input[type=text]\n      {\n        padding: 5px;\n        \n       \n        \n      }\n      input[type=email]{\n        padding:  5px;\n        \n        \n        margin-left: 28px;\n        \n      }\n      input[type=text]:focus\n      {\n        padding: 5px;\n       \n      }\n      input[type=email]:focus{\n        padding: 5px;\n       \n       \n      }\n      fieldset\n      {\n        width: 45vw;\n        max-width: 50vw;\n        border: none;\n      }\n      \n       input\n      {\n        margin:1vh;\n      }\n     input[type=submit]\n      {\n         overflow-wrap: break-word;\npadding: 0.5rem 1rem;\nborder-radius: 5px;\ntext-align: center;\nvertical-align: middle;\njustify-content: center;\ntransition: border .15s linear;\nbackground-color: #0070d2;\nborder: 1px solid #0070d2;\n        color: #fff;\n        cursor:pointer;\n      }\n      \n    <\/style>\n    <meta\n          name=\"viewport\"\n          content=\"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=0\"\n          \/>\n    <meta http-equiv=\"Content-Type\" content=\"text\/html; charset=UTF-8\" \/>\n  <\/head>\n  <body>\n    <div class=\"layout layout-canvas-g\" style=\"background: transparent;\">\n      <div class=\"section\">\n        <div class=\"columns col1\">\n          <div data-type=\"slot\" data-key=\"col1\">\n            %%[ \n      SET @subscriberKey = [_subscriberkey] \n      \/\/OutputLine(Concat(@subscriberKey,' subscriberKey'))\n      \/\/ PROFILE ATTRIBUTES \n       SET @emailAddress = [emailaddr] \n       \/\/OutputLine(Concat(@emailAddress,' emailAddress'))\n]%%\n            \n            \n            <script runat=\"server\" language=\"JavaScript\">\n              Platform.Load(\"core\",\"1.1.2\");\n              var sk = Variable.GetValue(\"@subscriberKey\");\n              var subscriberObj = Subscriber.Init(sk);\n              var attributes = subscriberObj.Attributes.Retrieve();\n              var attr=Stringify(attributes);\n              Variable.SetValue(\"@fsName\", Stringify(attributes[0][\"Value\"]));\n              Variable.SetValue(\"@lsName\", Stringify(attributes[1][\"Value\"]));\n              var subscriptionStatus = Subscriber.Retrieve({\n                Property: \"SubscriberKey\",\n                SimpleOperator: \"equals\",\n                Value: Variable.GetValue(\"@subscriberKey\")\n              }\n                                                          );\n              if(subscriptionStatus[0].Status == \"Active\") {\n                Variable.SetValue(\"subscriptionStatus\", true);\n              }\n              else {\n                Variable.SetValue(\"subscriptionStatus\", false);\n              }\n              \/\/ POST VARIABLES\n              var subscriberKey = Platform.Request.GetFormField('subscriberKeyAtt') || \"\";\n              var firstName = Platform.Request.GetFormField('firstName') || \"\";\n              var lastName = Platform.Request.GetFormField('lastName') || \"\";\n              var email = Platform.Request.GetFormField('email') || \"\";\n              var unsubscribe = Platform.Request.GetFormField('unsubscribe') || false;\n              var subscribeTo = Platform.Request.GetFormField('subscribe') || false;\n              \n              try{\n                if(subscriberKey) {\n                  var subscriberData = {\n                    \"EmailAddress\":email,\n                    \"Attributes\": {\n                      \"First Name\" : firstName, \n                      \"Last Name\" : lastName\n                    }\n                  };\n                  if(subscribeTo) {\n                    subscriberData.Status = \"Active\";\n                  }\n                  var subObj = Subscriber.Init(subscriberKey);\n                  if(unsubscribe) {\n                    var unsubscribeSatus = subObj.Unsubscribe();\n                    Variable.SetValue(\"unsubscribeSatus\", unsubscribeSatus);\n                  }\n                  else {\n                    var udpateStatus = subObj.Update(subscriberData);\n                    Variable.SetValue(\"unsubscribeSatus\", (subscribeTo && udpateStatus)?\"SUBSCRIBED\":\"NA\");\n                    Variable.SetValue(\"udpateStatus\", udpateStatus);\n                  }\n                  Variable.SetValue(\"formSubmitted\", true);\n                }\n                else {\n                  Variable.SetValue(\"formSubmitted\", false);\n                }\n            <\/script>\n            <center>\n              <fieldset>\n                <center>\n                  <img src=\"https:\/\/image.s10.sfmc-content.com\/lib\/fe3315707564057b731377\/m\/1\/60755c93-fbf3-4e61-81bb-e5770d8a7cc0.png\" height=\"69\" width=\"250\"\/>\n                <\/center>\n                <form method=\"POST\">\n                  <div class=\"card\">\n                  <h2>Update Your Profile<\/h2> \n                  <input type=\"hidden\" name=\"subscriberKeyAtt\" value=\"%%=v(@subscriberkey)=%%\">\n                  <label>First Name: <\/label>\n                  <input type=\"text\" name=\"firstName\" value=%%=v(@fsName)=%%  %%[IF @subscriptionStatus ==false THEN]%% disabled title='Please subscribe to us' %%[ENDIF]%%>\n                  <br>\n                  <label>Last Name: <\/label>\n                  <input type=\"text\" name=\"lastName\" value=%%=v(@lsName)=%% %%[IF @subscriptionStatus ==false THEN]%% disabled title='Please subscribe to us' %%[ENDIF]%% >\n                  <br>\n                  <label>* Email: <\/label>\n                  <input type=\"email\" required name=\"email\" value=\"%%=v(@emailAddress)=%%\" %%[IF @subscriptionStatus ==false THEN]%%disabled title='Please subscribe to us' %%[ENDIF]%% >\n                  <br>\n                    <input type=\"submit\" value=\"Update\" class=\"\">\n                   <\/div>\n                <\/form>\n              <\/fieldset>\n            <\/center>\n            <script src=\"https:\/\/cdn.jsdelivr.net\/npm\/sweetalert2@10.3.5\/dist\/sweetalert2.all.min.js\"><\/script>\n            %%[ IF @formSubmitted AND @udpateStatus == \"OK\" AND @unsubscribeSatus == \"NA\" THEN ]%%\n            <script>\n              Swal.fire(\"Updated!\", \"Your preferences are updated successfully\", \"success\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @udpateStatus == \"Error\" AND @unsubscribeSatus == \"NA\" THEN ]%%\n            <script>\n              Swal.fire(\"Not Updated!\", \"Something went wrong while updating your preferences\", \"error\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                             );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @unsubscribeSatus == \"OK\" THEN ]%%\n            <script>\n              Swal.fire(\"Unsubscribed!\", \"Sorry to see you go away!\", \"info\").then(() => {\n                location.href = location.href;\n              }\n                                                                                  );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @unsubscribeSatus == \"SUBSCRIBED\" THEN ]%%\n            <script>\n              Swal.fire(\"Subscribed!\", \"Happy to see you again!<br\/>We make sure we don't spam you!!\", \"success\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                                      );\n            <\/script>\n            %%[ ELSE ]%%\n            %%[ ENDIF ]%%\n            <script runat=\"server\">\n              }\n              catch(ex) {\n                Write(\"<p style='color:red'>\"+Stringify(ex)+\"<\/p>\");\n              }\n            <\/script>\n\n            <!-- Subscription Logic -->\n\n            %%[ \nSET @sk =[_subscriberkey] \nSET @emailAddress = [emailaddr] \n\/\/OutputLine(Concat(@sk,' subscriberKey'))\n]%%\n\n            <script runat=\"server\" language=\"JavaScript\">\n              Platform.Load(\"core\", \"1\");\n              var email = Variable.GetValue(\"@emailAddress\");\n              var subscriptionStatus = Subscriber.Retrieve({\n                Property: \"SubscriberKey\",\n                SimpleOperator: \"equals\",\n                Value: Variable.GetValue(\"@sk\")\n              }\n                                                          );\n              if(subscriptionStatus[0].Status == \"Active\") {\n                Variable.SetValue(\"subscriptionStatus\", true);\n              }\n              else {\n                Variable.SetValue(\"subscriptionStatus\", false);\n              }\n\n              \/\/ POST VARIABLES\n              var subscriberKey = Platform.Request.GetFormField('subscriberKey') || \"\";\n              var unsubscribe = Platform.Request.GetFormField('unsubscribe') || false;\n              var subscribeTo = Platform.Request.GetFormField('subscribe') || false;\n              var activeLsNameWithId = Platform.Request.GetFormField('activeListName') || \"\";\n\n              var tempActiveLsNameId = activeLsNameWithId.toString().split(',');\n              var correctActiveLsId = [];\n              \/\/Write(\"tempActiveLsNameId: \"+Stringify(tempActiveLsNameId));\n              if(tempActiveLsNameId.length > 0) {\n                for(var i = 0; i < tempActiveLsNameId.length; i++) {\n                  var st = tempActiveLsNameId[i].split(':');\n                  \n                  correctActiveLsId.push(st[1]);\n                }\n              }\n\n              \/\/ get all publication lists\n              var allPublicationLists = getAllPublicationLists();\n              var pList = [\"7135\"];\n              \/\/Write(\"getAllPublicationLists: \"+Stringify(getAllPublicationLists()));\n              function getAllPublicationLists() {\n\n        var rr = Platform.Function.CreateObject(\"RetrieveRequest\");\n        Platform.Function.SetObjectProperty(rr, \"ObjectType\", \"Publication\");\n        Platform.Function.SetObjectProperty(rr, \"QueryAllAccounts\", \"True\");\n\n        Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"ID\");\n        Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"Name\");\n        Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"Category\");\n        Platform.Function.AddObjectArrayItem(rr, \"Properties\", \"Client.ID\");\n                \n                \n\n        var reqParams = [0,0];\n        var publications = Platform.Function.InvokeRetrieve(rr, reqParams);\n\n        return publications;\n    } \n              \n              var subs_Key=Variable.GetValue(\"@sk\");\n              var subscriber_Obj = Subscriber.Init(subs_Key);\n               var s_publicationLst = subscriber_Obj.Lists.Retrieve();\n              var subListMap ={};\n              for(var i = 0; i < s_publicationLst.length; i++) {\n                subListMap[s_publicationLst[i][\"List\"][\"ID\"]] = s_publicationLst[i];\n              }\n             \/*Write(\"subMap::: \"+Stringify(subListMap()));\n              var lstObj = subListMap[\"7135\"];\n              Write(\"lstObj=  \"+Stringify(lstObj));\n              Write(\"Status: => \"+lstObj[\"Status\"]);\n              Write(\"List:=> \"+lstObj[\"List\"][\"ID\"]);\n              Write(\"List:=> \"+lstObj[\"List\"][\"Name\"]);\n              Write(\"<br> allPublicationLists ID:=> \"+allPublicationLists[0][\"ID\"]);\n              Write(\"allPublicationLists Name::=> \"+allPublicationLists[0][\"Name\"]);\n              *\/\n               \n              \/\/\n              \n              \/******************************************************************\/\n              function arrayDiff(a1, a2) {\n                var a = [],\n                    diff = [];\n                for(var i = 0; i < a1.length; i++) {\n                  a[a1[i]] = true;\n                }\n                for(var i = 0; i < a2.length; i++) {\n                  if(a[a2[i]]) {\n                    delete a[a2[i]];\n                  }\n                  else {\n                    a[a2[i]] = true;\n                  }\n                }\n                for(var k in a) {\n                  diff.push(k);\n                }\n                return diff;\n              }\n              \/************************************************\/\n              var subsListId = [];\n              \/\/Subscriber Initialization for all the process\n              var subscriberObj1 = Subscriber.Init(subscriberKey);\n              var subslist = subscriberObj1.Lists.Retrieve();\n              \n              for(var i = 0; i < subslist.length; i++) {\n                subsListId.push(subslist[i][\"List\"][\"ID\"]);\n              }\n              var correctUnsubscribedLsId = [];\n              if(correctActiveLsId.length > 0 && subslist.length > 0) {\n                correctUnsubscribedLsId = arrayDiff(subsListId, correctActiveLsId);\n              }\n              \/\/Write(\"correctUnsubscribedLsId=###  \"+Stringify(correctUnsubscribedLsId));\n              try {\n                if(subscriberKey) {\n                  var subscriberData = {\n                    \"EmailAddress\": email,\n                    \"SubscriberKey\": subscriberKey\n                  };\n                  if(subscribeTo) {\n                    subscriberData.Status = \"Active\";\n                  }\n                  var subObj = Subscriber.Init(subscriberKey);\n                  if(unsubscribe) {\n                    var unsubscribeSatus = subObj.Unsubscribe();\n                    Variable.SetValue(\"unsubscribeSatus\", unsubscribeSatus);\n                  }\n                  else\n                  {\n                    var udpateStatus = subObj.Upsert(subscriberData);\n                    Variable.SetValue(\"unsubscribeSatus\",(subscribeTo && udpateStatus)?\"SUBSCRIBED\":\"NA\");\n                    Variable.SetValue(\"udpateStatus\", udpateStatus);\n\n                    if(correctActiveLsId != 'undefined') \n                    {\n                      var listSubObj = Subscriber.Init(subscriberKey);\n                      for(var j = 0; j < correctActiveLsId.length; j++) {\n                        var subscriberData1 = {\n                          \"EmailAddress\": email,\n                          \"SubscriberKey\": subscriberKey,\n                          \"Lists\": {\n                            \"ID\": parseInt(correctActiveLsId[j]),\n                            \"Status\": \"Active\",\n                            \"Action\": \"Upsert\"\n                          }\n                        };\n                        var status1 = listSubObj.Upsert(subscriberData1);\n                      }\n                    }\n                    if(correctUnsubscribedLsId.length>0)\n                    {\n                      var listSubObj2 = Subscriber.Init(subscriberKey);\n                      for(var k = 0; k < correctUnsubscribedLsId.length; k++) {\n                        if(correctUnsubscribedLsId[k]!='undefined')\n                        {\n                          var subscriberData2 = {\n                            \"EmailAddress\": email,\n                            \"SubscriberKey\": subscriberKey,\n                            \"Lists\": {\n                              \"ID\":parseInt(correctUnsubscribedLsId[k]),\n                              \"Status\": \"Unsubscribed\",\n                              \"Action\": \"Upsert\"\n                            }\n                          };\n                          var status2 = listSubObj2.Upsert(subscriberData2);\n                        }\n                      }\n                    }\n                    \n                     Write(\"correctActiveLsId===  \"+Stringify(correctActiveLsId));\n                     Write(\"correctUnsubscribedLsId===  \"+Stringify(correctUnsubscribedLsId));\n\n                  }\n                  Variable.SetValue(\"formSubmitted\", true);\n                }\n                else {\n                  Variable.SetValue(\"formSubmitted\", false);\n                }\n                \/\/\n            <\/script>\n\n            <center>\n              <fieldset>\n                <form method=\"POST\">\n                  <div class=\"card\">\n                    <h2>\n                      Update Your Subscriptions.\n                    <\/h2>\n                  <script runat=\"server\">\n                    Platform.Load(\"core\", \"1\");\n                    var subsKey=Variable.GetValue(\"@sk\");\n                    var subscriberObj = Subscriber.Init(subsKey);\n                    var disSubslist = subscriberObj.Lists.Retrieve();\n                    for(var i = 0; i < allPublicationLists.length; i++) {\n                      \/*Variable.SetValue(\"@listStatus\", disSubslist[i][\"Status\"]);\n                      Variable.SetValue(\"@listId\", disSubslist[i][\"List\"][\"ID\"]);\n                      Variable.SetValue(\"@listName\", disSubslist[i][\"List\"][\"Name\"]);*\/\n                      var lst_Obj = subListMap[allPublicationLists[i][\"ID\"]];\n                      var listStatus, listId, listName;\n                      if(lst_Obj){\n                        listStatus = lst_Obj[\"Status\"];\n                        listId = lst_Obj[\"List\"][\"ID\"];\n                        listName = lst_Obj[\"List\"][\"Name\"];\n                         }else{\n                        listId = allPublicationLists[i][\"ID\"];\n                        listName = allPublicationLists[i][\"Name\"];\n                         }\n                     \/* \n                     \n                      Write(\"<br\/> listStatus:\"+listStatus+\"<br\/>\");\n                      Write(\" listId: \"+listId+\"<br\/>\");\n                      Write(\" listName: \"+listName+\"<br\/>\");\n                      Write(\" <br\/>allPublicationLists: \"+Stringify(allPublicationLists)+\"<br\/>\");\n                      Write(\" <br\/>lst_Obj: \"+lst_Obj+\"<br\/>\");*\/\n                      \/\/\n                     Variable.SetValue(\"@listStatus\", listStatus);\n                      Variable.SetValue(\"@listId\", listId);\n                      Variable.SetValue(\"@listName\", listName);\n                      \n                      Write(\"<input type='hidden' name='listName' value='\" + Variable.GetValue('@listName') + \"'>\");\n                      disabledBlockString = '';\n                      disabledBlockString='%'+'%[IF @subscriptionStatus ==false THEN]%'+'%'+' disabled title=\"Please subscribe to us\" '+'%'+'%[ENDIF]%'+'%';\n                      var disabledVal= Platform.Function.TreatAsContent(disabledBlockString);\n                      Write(\"<label> \" + Variable.GetValue(\"@listName\") + \"<\/label>\");\n                      if(Variable.GetValue(\"@listStatus\") == \"Active\") {\n                        Write(\":<input type='checkbox' name='activeListName' value='\" + Variable.GetValue('@listName') + \":\" + Variable.GetValue('@listId') + \"' id='\"+i+\"' class='checkbox' checked\"+disabledVal+\"><\/input><label for='\"+i+\"' class='switch' style='background-repeat: no-repeat;margin-bottom: -5px;' \"+disabledVal+\"><\/label><br\/>\");\n                      }\n                      else if(Variable.GetValue(\"@listStatus\") == \"Unsubscribed\") {\n                        Write(\":<input type='checkbox' name='activeListName' value='\" + Variable.GetValue('@listName') + \":\" + Variable.GetValue('@listId') + \"' id='\"+i+\"' class='checkbox' \"+disabledVal+\" ><\/input><label for='\"+i+\"' class='switch' style='background-repeat: no-repeat;margin-bottom: -5px;' \"+disabledVal+\"><\/label><br\/>\");\n                      }else{\n                        Write(\":<input type='checkbox' name='activeListName' value='\" + Variable.GetValue('@listName') + \":\" + Variable.GetValue('@listId') + \"' id='\"+i+\"' class='checkbox' \"+disabledVal+\" ><\/input><label for='\"+i+\"' class='switch' style='background-repeat: no-repeat;margin-bottom: -5px;' \"+disabledVal+\"><\/label><br\/>\");\n                      }\n                    }\n                  <\/script>\n                  <input type=\"hidden\" name=\"subscriberKey\" value=\"%%=v(@sk)=%%\">\n                  <br>\n                  <input type=\"submit\" value=\"Update\" class=\"\">\n                  <\/div>\n                  \n                   \n                <\/form>  \n              <\/fieldset>\n              <fieldset>\n                <form method=\"POST\"> \n                  <input type=\"hidden\" name=\"subscriberKey\" value=\"%%=v(@sk)=%%\">\n                <div class=\"card\"  style=\"max-width:120vw;color:black;font-size:1.5em;\">\n                    <label >%%=IIF(@subscriptionStatus, \"Unsubscribe from all\", \"Resubscribe\")=%%<\/label>\n                    <br>\n                    <input name='%%=IIF(@subscriptionStatus, \"unsubscribe\", \"subscribe\")=%%' value=\"true\" type=\"checkbox\" id=\"togglesub\" class=\"checkbox\">\n                    <label for=\"togglesub\" class=\"switch\" style=\"background-repeat: no-repeat;\"><\/label>\n                    <br>You are %%=IIF(@subscriptionStatus, \"subscribed to\", \"unsubscribed from\")=%% us!.\n                    <br\/> \n                     <input type=\"submit\" value=\"Update\" class=\"\">\n                  <\/div>\n                <\/form>\n              <\/fieldset>\n            <\/center>\n            <script src=\"https:\/\/cdn.jsdelivr.net\/npm\/sweetalert2@10.3.5\/dist\/sweetalert2.all.min.js\"><\/script>\n            %%[ IF @formSubmitted AND @udpateStatus == \"OK\" AND @unsubscribeSatus == \"NA\" THEN ]%%\n            <script>\n              Swal.fire(\"Updated!\", \"Your subscription preferences are updated successfully\", \"success\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                             );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @udpateStatus != \"OK\" AND @unsubscribeSatus == \"NA\" THEN ]%%\n            <script>\n              Swal.fire(\"Not Updated!\", \"Something went wrong while updating your preferences\", \"error\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                             );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @unsubscribeSatus == \"OK\" THEN ]%%\n            <script>\n              Swal.fire(\"Unsubscribed!\", \"Sorry to see you go away!\", \"info\").then(() => {\n                location.href = location.href;\n              }\n                                                                                  );\n            <\/script>\n            %%[ ELSEIF @formSubmitted AND @unsubscribeSatus == \"SUBSCRIBED\" THEN ]%%\n            <script>\n              Swal.fire(\"Subscribed!\", \"Happy to see you again!<br\/>We make sure we don't spam you!!\", \"success\").then(() => {\n                location.href = location.href;\n              }\n                                                                                                                      );\n            <\/script>\n            %%[ ELSE ]%%\n            %%[ ENDIF ]%%\n            <script runat=\"server\">\n              }\n              catch(ex) {\n                Write(\"<p style='color:red;background:black'>\"+Stringify(ex)+\"<\/p>\");\n              }\n            <\/script>\n\n            <!-- Subscription ENDS -->\n\n          <\/div>\n        <\/div>\n      <\/div>\n    <\/div>\n  <\/body>\n<\/html>\n",
      "meta": [],
      "slots": {
        "col1": {
          "content": "<div data-type=\"block\" data-key=\"ps0bkxjklaf\"><\/div>",
          "design": "<p style=\"font-family:arial;color:#ccc;font-size:11px;text-align:center;vertical-align:middle;font-weight:bold;padding:10px;margin:0;border:#ccc dashed 1px;\">Drop blocks or content here<\/p>",
          "blocks": {
            "ps0bkxjklaf": {
              "assetType": {
                "id": 197,
                "name": "htmlblock"
              },
              "content": "",
              "design": "<table cellpadding=\"0\" cellspacing=\"0\" width=\"100%\" style=\"min-width: 100%; \" class=\"stylingblock-content-wrapper\"><tr><td class=\"stylingblock-content-wrapper camarker-inner\"><div class=\"default-design\"><div style=\"width:100%;height:150px;background: url(data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAABtYAAACWBAMAAAC4IKEyAAAAMFBMVEUBAQGZmZmJiYlpaWk5OTmenp56enqUlJShoaFaWlqOjo6Dg4Ojo6P+\/v7e3t68vLypNl01AAAADHRSTlMwy5hkQt57tfJXpItm2J+RAAAKc0lEQVR4XuzZMWsTYRzH8Ud7JqR2aAaLSIYQS3HIkDSCFDocdiiIg4LgkkWl4JDJyVGhi5JBqS8go4NDX4BD4nnY0N+LMkHkwMR4mH\/D81y\/n\/HGe+7L\/f93LiwAAAAAAAAAAAAAAAAAAADAfstdFgCt4aTjVgC0hprcSoHWaA20BloDrcW0thKgtRatrQRorU5rFwy0RmtY68y1R2u2aA0bmmtEawZoDbRmi9ZAa\/ZoDbTmMVpD1GhqrrSxTWv2Hl3a1rCmv0pozd6wgK2B1uzR2kGnq3\/+D8IBrS2L1pp5dnl8jt2MK1pg5GFrMa0Zi81bQ0WD8Fs73KQ1Y9vmreGakuBbeyBas7Zl3hqaSuPAW7vfD7617843761bQ0XSIOzWdvsKvrXE2fnkDFRGLr\/dRk0TaWPHZTCvqnHQrfX6Eq1l2nq6E7tlXZfLr5nn0cBXSekf19arN7XAWXXL+eNQsmjteWNWPcTW2po4u\/XCLaesVnFau7rEUdqJ+pqo53qrZb45b9yTTWs1zRq6VakkpqlNpa\/uLvfJrF6c1jY09GSElMbBttZWIVpbS6xTm3p82\/23h\/lvaanazUaeAa0tGiGlNNTWnqkYrZXOnYmPZpt1T29yT2jKeLk4n+wr2fNkhJROw2ztSAVp7aXqzkLTrLUvGhemtZoX021ZvxyH2Fp0pIK0VpJ+eNZaV+e0ZqqXHUpwrUV3VJTWepKeeNValNVPa6YjpHQaWmtZauG3VtJE+sGn1kpSSmuWyvrtOLTWotcqTGs9Tb3zo7Wsn9jlsV69oYzeVjdpbZ6f7Nwxb9tGGMbxUpLtKukQtUWAAhlUpmhRwAMROpsGdmqHDkFhFAiQgUWXDhkMVCOHwMmYwUs2D16yZQiQNUMkRxITP7G+QEjnA0RwPoCsxBfGeiWZsnkwRR7J978awpHk\/QjqDlYDJ\/UyZq3iIEZr32BeRnJPPNdWyJoGINrxaFGeUGytcgfj7ExZKzvIjzUHQXtKWKMrssPW4usSqAeZsqYhP9boRX5DHWsNALfYWmjVmsiWvaBULyVrbM0hGpYy1p4DeMnWQitDVJfdQ6Fgp2KNrf0Oal0Zaw6AbpRnvHkTM+2aBls7a62W7nMZkdpla7F\/Z4Z7oXX\/EoC4rD2M+ETVENKLIlj7Vv9SpCmyjclep2GNra1gsgeKWKue82m2RtWlXyEBIwVrbE3DZLuKWFuGiK2FzxB5a5cx3XpRrZlmA\/N6ZhpFtLYCkRGTNbb2B6Z7XVRrOLMXRbS2FHUWsTX8b5rm1jkLSNcw079rbE0EtvYnRBv5tVYxp1uTsyY3\/bQwP9m1xtZWgfis3YXoXn7X\/EuzB52ONbbG1p5A9CqJvWytNpOdO2vVm6f5rLE1tkZL1OjGYk12FtfzYo3S5swqtga2BhF6SljTx\/2aK2tsja3RHOgoYQ3jXCNX1tgaW6OZaKllDV1Vrf2lWwWxxtYaCK11wYOyFbOGDUWtAUZi1thaSZ\/sepat0czakTmB\/kd5a40IswsUOlYM1giOmtbYmtTNaGfb2jaCbsmcwJG\/eGu4nStrbI2tPadzl7B2kIA1186TNbbG1hyJw9EgGgGDt6Phwq2hvRhrndrpmkpau6FThmLWyvpxP7M16a1sif8W7Q98wHs\/8IcxWdszKUzXjMNapFxbRWuroFpbalkr0aTLq7Vl3YnVWkXm85qg5vnoH1vzvKGsNek6VlLW0LOUtUZHGDm2toTJuhe4GvFZK0tZE9Q+WxseeZ53uGhruJKENUpNa\/LY2FrlGiZzjexZ2z8W5g+x7wEjgS1Ba2wNm5Yy1m7oPypt7RGm28uctSXhC8AbHwG2dwlaY2vYVMbaKqCyteWHmKmZQWuHtL3WT9gaW8PfbC1STyS++qtrzR+Ot9eOErDG1uSxsbXfcLr7GbOmDYKXyMEBglWSD8laY2v4jq2dW\/UOQnqaMWsIsHlvMfq8SpL02ghbww9s7bz+m7Ork7a1xwiCezXK4MKY3\/feYyCoYUHW2FrVFDkIqcnWzu4SwltP25pDdzna4CNhbYiBdwAsyhpb0zC\/JluT+AjVTtvaXTr5iIOP\/H1h7RDpWGNr7k+ZtMbWtumyRh28v+8BH5GSNbYGt54La7XalWJZ+xoiuV8+fuNLPJzYWlsX\/RKfNXTsPFgDWrUgoxjWVnCSHXnw0SFbk79BcVgjbHmwNq5bDGuXcZIlMXiK1koI2imyNbSMPFlrZ9DaPzXqquT+WuerbFnrWUW2htZWqtbY2ioo1OWstS5kraSHdH2R1nC70NbQs5SxxtZ6CVoLP7\/2Qq25xvw\/1nNsjbCpYo2t4fscWSNH1F6xrWHTUsUaW+tYcVv7xN4dqzQMxHEcR62CxaGnCBUytFd8ATPaIejqoCgFt9LZwcHRQRQEwaGPoM\/QFzCRtsv\/oTSN5q5esPHMhVzv9x2v0DbpfUoCyaVa1ujabWt0n\/Vrqpm3Bmv0tMzWsv9MttKv5YA16hViDdaOeFpH01pUsrXsWv+0tsGT2qR06bg16rlr7dhP07emTs3IaWsrC1aac9ka7fzFGqnZZi3TRwnWYI0i161R2dYG\/DMHrcEa3ZRrDda8eNRFa7A2DsqwBmuwBmv0kNsarKmvtvJYqzOp53i0Y8JazZ8vqJI1WFNvTzgp2hqsqYMUmbC2quzlvNbqjA1LsAZr04zbzCf2WhuzWU1Yy29tn2jkD41bgzW6UJ+6E2paY7M8g9b007fGOW8tqzVRw7w1WBtLxw+blBRoWBNZZS3Xlr4VYA3WYI0e1eXKXuyyBmtrnLerbw3WSF095a7q1mAtZPL7rZLICmuwdkVJk6pagzWR1dZgzRMbY7k1WBv5cd2Cran7waS1Go\/r61nTaJsn3Zq3VkuHAqutwZrIWmvikxq\/W3tlSXsG5pE5a3UxiWBNsQZrX7N6t1rWPEp6t8raejp0CmtyoZhjLlvzSE7fGqwdSIepU96BNaWF1mAtlM6vYE0t82llkVPWYO3c\/66rZ03U0LXm\/+xQy5p8lR6sDXha32ZrZ2y+ZpHWPtq7W52GoTAAwwQICajVoOEYDK7cAsGg0BPDo9C9BC4JM5ZmpheFWfaNtBNL01+e1zZpk7ZPKnr6tSdr9QazVtU6au386FLY7HA3rB1etMWErdUbyhpr0RSsvS+rqLxljbUOrLFWO\/2bDu\/Az3Sg+i1FK9Z2862eWGOt0xas7bb8sMZa61hjrczzvJigNdZYW6f7qViL+rbGGmsX+Z+KsNYu1lhjLVo3HHdM1lhjjTXWWGONNdZYY22b7\/tmLWKNtT5ijTXW+o411lhjjTXWWMuybNmlNdZYYy06xRprrL0ObI011mZdWLv+Yq0Pa6yx9lGN0hpr8YnjwyyssXZTjdQaa1Fra8PH2tllMYi1MsZW\/Q9rrLH2XA0ea6zNu\/hl\/KytscaaWItYm2asscaaWGvfhK1d7Ze1xcDmVVgTa+u0bG+NteZn8h1rrDXE2umxxhprrLH2whpr3acyXvmxxprEGmtibZwdnRa46c+axNqkkliTWKtSSkXjhm1Kj9WsE2uSWJNYk\/QLCrLZZJTyaZMAAAAASUVORK5CYII=) repeat-x 0 0\"><\/div><\/div><\/td><\/tr><\/table>",
              "meta": {
                "wrapperStyles": {
                  "mobile": {
                    "visible": true
                  },
                  "styling": []
                }
              },
              "modelVersion": 2
            }
          },
          "maxBlocks": 0,
          "allowedBlocks": [],
          "modelVersion": 2
        }
      },
      "modelVersion": 2
    }
  },
  "availableViews": [
    "html"
  ],
  "modelVersion": 2
}
